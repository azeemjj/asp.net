trigger:
- main

pool:
  name: Default    # Uses your self-hosted agent pool
  demands:
  - agent.name -equals MyAgent01

variables:
  buildConfiguration: 'Release'
  publishDir: '$(Build.ArtifactStagingDirectory)\publish'

steps:
# 1. Use .NET SDK from global.json
- task: UseDotNet@2
  inputs:
    useGlobalJson: true

# 2. Restore NuGet packages
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

# 3. Build
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

# 4. Publish (ready for IIS)
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(publishDir)'

# 5. Deploy to IIS folder on the same VM
- powershell: |
    Write-Host "Deploying to C:\inetpub\MyApp..."
    $targetPath = "C:\inetpub\MyApp"
    if (!(Test-Path $targetPath)) {
        New-Item -Path $targetPath -ItemType Directory | Out-Null
    }
    Copy-Item "$(publishDir)\*" $targetPath -Recurse -Force
  displayName: 'Copy files to IIS directory'
